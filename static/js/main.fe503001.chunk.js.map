{"version":3,"sources":["index.js"],"names":["Simulation","React","Component","props","state","theta_1","Math","PI","theta_2","omega_1","omega_2","theta_2_path","E","this","draw","canvas","refs","ctx","getContext","g","cos","m2","E_calc","l1","l2","m1","cosD","calcE","console","log","abs","theta_path","angles","h","a_omega_1","omega_1_dot","a_theta_1","a_omega_2","omega_2_dot","a_theta_2","temp_theta_1","temp_omega_1","temp_theta_2","temp_omega_2","b_omega_1","b_theta_1","b_omega_2","b_theta_2","c_omega_1","c_theta_1","c_omega_2","c_theta_2","d_omega_1","d_theta_1","d_omega_2","calcRK","clearRect","translate","width","height","rotate","drawRectangle","setState","concat","requestAnimationFrame","bind","ref","l","m","w","fillStyle","fillRect","beginPath","arc","fill","delta","sinD","sin","sin_t1","ReactDOM","render","document","getElementById"],"mappings":"oOAgBMA,G,MAXiBC,IAAMC,U,kDAazB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,GAAKC,KAAKC,GAAK,IACzBC,SAAU,GAAKF,KAAKC,GAAK,IACzBE,QAAS,EACTC,QAAS,EACTC,aAAc,GACdC,EAAG,GARQ,E,gEAafC,KAAKC,S,6EAQL,IAAMC,EAASF,KAAKG,KAAKD,OACnBE,EAAMF,EAAOG,WAAW,MAMxBC,EAAI,KAGNP,EAAIC,KAAKT,MAAMQ,EACnB,GAAU,IAANA,EACAA,GAAKO,GAAK,MAAoBb,KAAKc,IAAIP,KAAKT,MAAMC,SAAWgB,KAAQf,KAAKc,IAAIP,KAAKT,MAAMI,cACtF,CACH,IAAMc,EAgElB,SAAeb,EAASC,EAASL,EAASG,EAASe,EAAIC,EAAIC,EAAIJ,EAAIF,GAC/D,IAAMO,EAAOpB,KAAKc,IAAIZ,EAAUH,GAChC,OAAsBkB,EAAGA,GAAjBE,EAAG,EAAIJ,EAAG,GAAWZ,EAAQA,EAAUY,EAAG,GAAGG,EAAGA,GAAId,EAAQA,EAAUW,EAAG,EAAEE,EAAGC,EAAGE,EAAKjB,EAASC,EAAUS,IAAMM,EAAK,EAAIJ,GAAME,EAAIjB,KAAKc,IAAIf,GAAWgB,EAAGG,EAAG,EAAElB,KAAKc,IAAIZ,IAlExJmB,CAAMd,KAAKT,MAAMK,QAASI,KAAKT,MAAMM,QAASG,KAAKT,MAAMC,QAASQ,KAAKT,MAAMI,QAZrF,GACA,IAEA,GACA,GAQ8GW,GACrHS,QAAQC,IAAI,cAAgBP,GACbhB,KAAKwB,IAAIR,EAAST,KAAKT,MAAMQ,GAMhD,IAAMmB,EAAalB,KAAKT,MAAMO,aAGxBqB,EA0Dd,SAAgBvB,EAASJ,EAASK,EAASF,EAASyB,EAAGR,EAAIJ,EAAIE,EAAIC,EAAIL,GAEnE,IAAMe,EAAYC,EAAYV,EAAIJ,EAAIhB,EAASG,EAASC,EAASC,EAASa,EAAIC,EAAIL,GAC5EiB,EAAY3B,EACZ4B,EAAYC,EAAYb,EAAIJ,EAAIhB,EAASG,EAASC,EAASC,EAASa,EAAIC,EAAIL,GAC5EoB,EAAY7B,EAEd8B,EAAenC,EAAU,GAAM4B,EAAIG,EACnCK,EAAehC,EAAU,GAAMwB,EAAIC,EACnCQ,EAAelC,EAAU,GAAMyB,EAAIM,EACnCI,EAAejC,EAAU,GAAMuB,EAAII,EAEjCO,EAAYT,EAAYV,EAAIJ,EAAImB,EAAcE,EAAcD,EAAcE,EAAcpB,EAAIC,EAAIL,GAChG0B,EAAYJ,EACZK,EAAYR,EAAYb,EAAIJ,EAAImB,EAAcE,EAAcD,EAAcE,EAAcpB,EAAIC,EAAIL,GAChG4B,EAAYJ,EAOZK,EAAYb,EAAYV,EAAIJ,EALlCmB,EAAenC,EAAU,GAAM4B,EAAIY,EAEnCH,EAAelC,EAAU,GAAMyB,EAAIc,EADnCN,EAAehC,EAAU,GAAMwB,EAAIW,EAEnCD,EAAejC,EAAU,GAAMuB,EAAIa,EAE2DvB,EAAIC,EAAIL,GAChG8B,EAAYxC,EAAU,GAAMwB,EAAIW,EAChCM,EAAYZ,EAAYb,EAAIJ,EAAImB,EAAcE,EAAcD,EAAcE,EAAcpB,EAAIC,EAAIL,GAChGgC,EAAYzC,EAAU,GAAMuB,EAAIa,EAOhCM,EAAYjB,EAAYV,EAAIJ,EALlCmB,EAAenC,EAAU4B,EAAIgB,EAE7BP,EAAelC,EAAUyB,EAAIkB,EAD7BV,EAAehC,EAAUwB,EAAIe,EAE7BL,EAAejC,EAAUuB,EAAIiB,EAEiE3B,EAAIC,EAAIL,GAChGkC,EAAY5C,EAAUwB,EAAIe,EAC1BM,EAAYhB,EAAYb,EAAIJ,EAAImB,EAAcE,EAAcD,EAAcE,EAAcpB,EAAIC,EAAIL,GAQtG,MAAO,CALcV,EAAWwB,EAAI,GAAMC,EAAY,EAAIU,EAAY,EAAII,EAAYI,GACjE/C,EAAW4B,EAAI,GAAMG,EAAY,EAAIS,EAAY,EAAII,EAAYI,GACjE3C,EAAWuB,EAAI,GAAMI,EAAY,EAAIS,EAAY,EAAII,EAAYI,GACjE9C,EAAWyB,EAAI,GAAMM,EAAY,EAAIQ,EAAY,EAAII,GALxDzC,EAAUuB,EAAIiB,KA7FbK,CAAO1C,KAAKT,MAAMK,QAASI,KAAKT,MAAMC,QAASQ,KAAKT,MAAMM,QAASG,KAAKT,MAAMI,QArBlF,GACA,GACA,GAJA,GACA,IAsB+GW,GAC1HF,EAAIuC,UAAU,EAAG,EAAG,IAAM,KAC1BvC,EAAIwC,UAAW1C,EAAO2C,MAAM,EAAG3C,EAAO4C,OAAS,GAC/C1C,EAAI2C,OAAQ5B,EAAO,IACnB6B,EA3BW,GAGA,GAwBW5C,GAItBA,EAAIwC,UAAU,EAAGlC,IACjBN,EAAI2C,OAAQ5B,EAAO,GAAKA,EAAO,IAC/B6B,EAhCW,IAGA,GA6BW5C,GACtBA,EAAI2C,QAAS5B,EAAO,GAAKA,EAAO,IAChCf,EAAIwC,UAAU,GAAG,IACjBxC,EAAI2C,QAAQ5B,EAAO,IAGnBf,EAAIwC,WAAY1C,EAAO2C,MAAM,GAAI3C,EAAO4C,OAAS,GAEjD9C,KAAKiD,SAAS,CACVzD,QAAS2B,EAAO,GAChBxB,QAASwB,EAAO,GAChBvB,QAASuB,EAAO,GAChBtB,QAASsB,EAAO,GAChBrB,aAAcoB,EAAWgC,OAAO/B,EAAO,IACvCpB,EAAGA,IAGPoD,sBAAsBnD,KAAKC,KAAKmD,KAAKpD,S,+BAKrC,OACI,6BACI,4BAAQqD,IAAI,SACZR,MAAO,IAAKC,OAAQ,W,GAnFX1D,IAAMC,YAyF/B,SAAS2D,EAAcM,EAAGC,EAAGnD,GACzB,IAAMoD,EAAID,EAAE,GACZnD,EAAIqD,UAAY,QAChBrD,EAAIsD,UAAUF,EAAE,EAAG,EAAGA,EAAGF,GACzBlD,EAAIuD,YACJvD,EAAIwD,IAAI,EAAE,EAAE,EAAE,EAAEnE,KAAKC,GAAG,EAAED,KAAKC,IAC/BU,EAAIqD,UAAY,OAChBrD,EAAIyD,OAuDR,SAASvC,EAAYV,EAAIJ,EAAIhB,EAASG,EAASC,EAASC,EAASa,EAAIC,EAAIL,GACrE,IAAMwD,EAAQnE,EAAUH,EAClBqB,EAAOpB,KAAKc,IAAIuD,GAChBC,EAAOtE,KAAKuE,IAAIF,GAatB,OATY,GAAM,EAAEnD,EAAGH,EAAGuD,EAAKlE,EAAQA,EAAU,EAAEa,EAAGF,EAAGK,EAAKkD,EAAKnE,EAAQA,EAAUU,EAHtEb,KAAKuE,IAAIxE,IAGuE,EAAEoB,EAAK,EAAEJ,GAAM,EAAEF,EAAEE,EAAGK,EAFtGpB,KAAKuE,IAAIrE,KAGVe,GAAM,EAAEE,EAAK,GAAKJ,EAAK,EAAIK,EAAOA,IAYpD,SAASY,EAAYb,EAAIJ,EAAIhB,EAASG,EAASC,EAASC,EAASa,EAAIC,EAAIL,GACrE,IAAMwD,EAAQnE,EAAUH,EAClBqB,EAAOpB,KAAKc,IAAIuD,GAChBC,EAAOtE,KAAKuE,IAAIF,GAChBG,EAASxE,KAAKuE,IAAIxE,GAYxB,OATa,IAAO,EAAEc,EAAEM,EAAGC,EAAKoD,EAAS3D,EAF1Bb,KAAKuE,IAAIrE,IAE2B,EAAEa,EAAK,EAAEI,GAAM,EAAEN,EAAEE,EAAGK,EAAKoD,EAASvD,EAAGqD,EAAKnE,EAAQA,GAAS,EAAEgB,EAAK,EAAEJ,GAAM,EAAEG,EAAGH,EAAGK,EAAKkD,EAAKlE,EAAQA,IAC3Ic,GAAM,EAAEC,EAAK,GAAKJ,EAAK,EAAIK,EAAOA,IAclDqD,IAASC,OACP,kBAAChF,EAAD,MACAiF,SAASC,eAAe,W","file":"static/js/main.fe503001.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n  \nclass Pendulum extends React.Component {\n  \n    render() {\n      return (\n        <rect>\n\n        </rect>\n      );\n    }\n  }\n  \nclass Simulation extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            theta_1: -80 * Math.PI / 180,\n            theta_2: -60 * Math.PI / 180,\n            omega_1: 0,\n            omega_2: 0,\n            theta_2_path: [],\n            E: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n     \n    componentWillUnmount() {\n    }\n\n\n    draw() {\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext(\"2d\");\n        const l1 = 90;\n        const l2 = 120;\n        const dt = 1/10;\n        const m1 = 70;\n        const m2 = 80;\n        const g = 9.81;\n        const E_tol = 100000;\n\n        var E = this.state.E;\n        if (E === 0) {\n            E = -g * ((m1 / 2 + m2) * l1* Math.cos(this.state.theta_1) + m2*l2/2*Math.cos(this.state.theta_2));\n        } else {\n            const E_calc = calcE(this.state.omega_1, this.state.omega_2, this.state.theta_1, this.state.theta_2, l1, l2, m1, m2, g);\n            console.log(\"E_calc is: \" + E_calc);\n            const E_diff = Math.abs(E_calc - this.state.E);\n            // console.log(\"E_diff is: \" + E_diff);\n            if (E_diff > E_tol) {\n                // window.alert('E differential is' + E);\n            }\n        }\n        const theta_path = this.state.theta_2_path;\n\n        //[omega_1, theta_1, omega_2, theta_2]\n        const angles = calcRK(this.state.omega_1, this.state.theta_1, this.state.omega_2, this.state.theta_2, dt, m1, m2, l1, l2, g);\n        ctx.clearRect(0, 0, 2000, 2000);\n        ctx.translate( canvas.width/2, canvas.height / 2 );\n        ctx.rotate( angles[1]);\n        drawRectangle(l1, m1, ctx);\n        // ctx.rotate( -angles[1]);\n\n\n        ctx.translate(0, l1 - 3);\n        ctx.rotate( angles[3] - angles[1] );\n        drawRectangle(l2, m2, ctx);\n        ctx.rotate( -angles[3] + angles[1]);\n        ctx.translate(0, -l1 + 3);\n        ctx.rotate(-angles[1]);\n        // ctx.translate( l1 * Math.sin(angles[1]),  - l1 * Math.cos(angles[1]));\n\n        ctx.translate( -canvas.width/2, -canvas.height / 2 )\n\n        this.setState({\n            theta_1: angles[1],\n            theta_2: angles[3],\n            omega_1: angles[0],\n            omega_2: angles[2],\n            theta_2_path: theta_path.concat(angles[3]),\n            E: E,\n        });\n\n        requestAnimationFrame(this.draw.bind(this))\n\n    }\n\n    render() {\n        return(\n            <div>\n                <canvas ref=\"canvas\"\n                width={700} height={700} />\n            </div>\n        )\n    }\n}\n\nfunction drawRectangle(l, m, ctx) {\n    const w = m/10;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(-w/2, 0, w, l);\n    ctx.beginPath();\n    ctx.arc(0,0,3,0*Math.PI,2*Math.PI)\n    ctx.fillStyle = 'blue';\n    ctx.fill();\n\n    return \n}\n\nfunction calcE(omega_1, omega_2, theta_1, theta_2, l1, l2, m1, m2, g) {\n    const cosD = Math.cos(theta_2 - theta_1);\n    return (m1/6 + m2/2)*(l1*l1)*omega_1*omega_1 + m2/6*(l2*l2)*omega_2*omega_2 + m2/2*l1*l2*cosD*omega_1 *omega_2 - g * ((m1 / 2 + m2) * l1* Math.cos(theta_1) + m2*l2/2*Math.cos(theta_2));\n}\n\nfunction calcRK(omega_1, theta_1, omega_2, theta_2, h, m1, m2, l1, l2, g) {\n\n    const a_omega_1 = omega_1_dot(m1, m2, theta_1, theta_2, omega_1, omega_2, l1, l2, g);\n    const a_theta_1 = omega_1;\n    const a_omega_2 = omega_2_dot(m1, m2, theta_1, theta_2, omega_1, omega_2, l1, l2, g);\n    const a_theta_2 = omega_2;\n\n    let temp_theta_1 = theta_1 + 0.5 * h * a_theta_1;\n    let temp_omega_1 = omega_1 + 0.5 * h * a_omega_1;\n    let temp_theta_2 = theta_2 + 0.5 * h * a_theta_2;\n    let temp_omega_2 = omega_2 + 0.5 * h * a_omega_2;\n\n    const b_omega_1 = omega_1_dot(m1, m2, temp_theta_1, temp_theta_2, temp_omega_1, temp_omega_2, l1, l2, g);\n    const b_theta_1 = temp_omega_1;\n    const b_omega_2 = omega_2_dot(m1, m2, temp_theta_1, temp_theta_2, temp_omega_1, temp_omega_2, l1, l2, g);\n    const b_theta_2 = temp_omega_2;\n\n    temp_theta_1 = theta_1 + 0.5 * h * b_theta_1;\n    temp_omega_1 = omega_1 + 0.5 * h * b_omega_1;\n    temp_theta_2 = theta_2 + 0.5 * h * b_theta_2;\n    temp_omega_2 = omega_2 + 0.5 * h * b_omega_2;\n\n    const c_omega_1 = omega_1_dot(m1, m2, temp_theta_1, temp_theta_2, temp_omega_1, temp_omega_2, l1, l2, g);\n    const c_theta_1 = omega_1 + 0.5 * h * b_omega_1;\n    const c_omega_2 = omega_2_dot(m1, m2, temp_theta_1, temp_theta_2, temp_omega_1, temp_omega_2, l1, l2, g);\n    const c_theta_2 = omega_2 + 0.5 * h * b_omega_2;\n\n    temp_theta_1 = theta_1 + h * c_theta_1;\n    temp_omega_1 = omega_1 + h * c_omega_1;\n    temp_theta_2 = theta_2 + h * c_theta_2;\n    temp_omega_2 = omega_2 + h * c_omega_2;\n\n    const d_omega_1 = omega_1_dot(m1, m2, temp_theta_1, temp_theta_2, temp_omega_1, temp_omega_2, l1, l2, g);\n    const d_theta_1 = omega_1 + h * c_omega_1;\n    const d_omega_2 = omega_2_dot(m1, m2, temp_theta_1, temp_theta_2, temp_omega_1, temp_omega_2, l1, l2, g);\n    const d_theta_2 = omega_2 + h * c_omega_2;\n\n    const calc_omega_1 = omega_1 + (h / 6) * (a_omega_1 + 2 * b_omega_1 + 2 * c_omega_1 + d_omega_1);\n    const calc_theta_1 = theta_1 + (h / 6) * (a_theta_1 + 2 * b_theta_1 + 2 * c_theta_1 + d_theta_1);\n    const calc_omega_2 = omega_2 + (h / 6) * (a_omega_2 + 2 * b_omega_2 + 2 * c_omega_2 + d_omega_2);\n    const calc_theta_2 = theta_2 + (h / 6) * (a_theta_2 + 2 * b_theta_2 + 2 * c_theta_2 + d_theta_2);\n\n    return [calc_omega_1, calc_theta_1, calc_omega_2, calc_theta_2]\n}\n\nfunction omega_1_dot(m1, m2, theta_1, theta_2, omega_1, omega_2, l1, l2, g) {\n    const delta = theta_2 - theta_1;\n    const cosD = Math.cos(delta);\n    const sinD = Math.sin(delta);\n    const sin_t1 = Math.sin(theta_1);\n    const sin_t2 = Math.sin(theta_2);\n\n    const num = 3  * (2*l2*m2*sinD*omega_2*omega_2 + 3*l1*m2*cosD*sinD*omega_1*omega_1 - g*sin_t1*(2*m1 + 4*m2) + 3*g*m2*cosD*sin_t2);\n    const denom = l1 * (4*m1 + 12 * m2 - 9 * cosD * cosD);\n\n    // const mu = 1 + (m1/m2);\n    // const num = g * (Math.sin(theta_2) * Math.cos(delta) - mu * Math.sin(theta_1)) - \n    //     Math.sin(delta) * (l2*omega_2*omega_2 + l1*omega_1*omega_1* Math.cos(delta));\n\n    // const denom = l1 * (mu - Math.cos(delta)* Math.cos(delta));\n\n    return num / denom;\n\n}\n\nfunction omega_2_dot(m1, m2, theta_1, theta_2, omega_1, omega_2, l1, l2, g) {\n    const delta = theta_2 - theta_1;\n    const cosD = Math.cos(delta);\n    const sinD = Math.sin(delta);\n    const sin_t1 = Math.sin(theta_1);\n    const sin_t2 = Math.sin(theta_2);\n\n    const num = -3  * (-3*g*m1*cosD*sin_t1 + g*sin_t2*(6*m2 + 2*m1) - 6*g*m2*cosD*sin_t1 + l1*sinD*omega_1*omega_1*(2*m1 + 6*m2) + 3*l2*m2*cosD*sinD*omega_2*omega_2);\n    const denom = l2 * (4*m1 + 12 * m2 - 9 * cosD * cosD);\n\n    // const mu = 1 + (m1/m2);\n    // const num = g * mu * (Math.sin(theta_1) * Math.cos(delta) -  Math.sin(theta_2)) + \n    //     Math.sin(delta) * (mu*l1*omega_1*omega_1 + l2*omega_2*omega_2* Math.cos(delta));\n\n    // const denom = l2 * (mu - Math.cos(delta)* Math.cos(delta));\n\n    return num / denom;\n\n}\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Simulation />,\n    document.getElementById('root')\n  );"],"sourceRoot":""}